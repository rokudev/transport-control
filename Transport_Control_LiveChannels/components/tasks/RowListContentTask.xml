<?xml version="1.0" encoding="UTF-8"?>

<!--********** Copyright 2019 Roku Corp.  All Rights Reserved. **********-->


<component name="RowListContentTask" extends="Task">

    <interface>
        <field id="content" type="node" />
        <field id="seekType" type="assocarray"/>
        <field id="isLive" type="assocarray" />
    </interface>

	<script type= "text/brightscript" uri = "pkg:/components/Config.brs"/>
    <script type="text/brightscript">

        <![CDATA[
			Sub Init()
			    m.top.functionName = "loadContent"
			End Sub

			Sub loadContent()
				array = loadConfig()
			    oneRow = GetApiArray(array)
			    list = [
			        {
			            Title:"My Channels"
			            ContentList : oneRow
			        }
			    ]
			    m.top.content = ParseXMLContent(list)
			End Sub

			Function ParseXMLContent(list As Object)
			    RowItems = createObject("RoSGNode","ContentNode")
          SeekTypeItems = createObject("roAssociativeArray")
          isLiveItems = createObject("roAssociativeArray")
			    for each rowAA in list
			        row = createObject("RoSGNode","ContentNode")
			        row.Title = rowAA.Title

			        for each itemAA in rowAA.ContentList
                  SeekTypeItems.AddReplace (itemAA.Title , itemAA.seekRestrict)
                  isLiveItems.AddReplace (itemAA.Title, itemAA.live)
			            item = createObject("RoSGNode","ContentNode")
			            item.SetFields(itemAA)
			            row.appendChild(item)
			        end for
			        RowItems.appendChild(row)
			    end for
          m.top.seekType = SeekTypeItems
          m.top.isLive = isLiveItems
			    return RowItems
			End Function


			Function GetApiArray(array as Object)
			    result = []
			    for each element in array
  			    	item = {}
  			    	item.Title = element.Title
  			    	item.streamFormat = element.streamFormat
              item.live = element.live
              item.seekRestrict = element.seekRestrict
  			    	item.HDPosterUrl = element.Logo
  			    	item.Url = element.Stream
			        result.push(item)
			    end for
			    return result
			End Function
]]>
    </script>
</component>
